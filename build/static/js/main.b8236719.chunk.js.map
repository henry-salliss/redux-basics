{"version":3,"sources":["components/Header.module.css","store/store.js","components/Counter.js","components/Header.js","components/Auth.js","App.js","index.js","components/Auth.module.css","components/Counter.module.css"],"names":["module","exports","initialCounterState","counter","show","counterSlice","createSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggle","clear","authenticationSlice","isAuthenticated","login","logout","store","configureStore","reducer","authentication","counterActions","actions","authActions","Counter","useSelector","showValue","dispatch","useDispatch","className","classes","value","onClick","button","Header","header","href","Auth","useState","email","setEmail","password","setPassword","emailTouched","setEmailTouched","passwordTouched","setPasswordTouched","emailIsValid","includes","passwordIsValid","length","formIsValid","auth","control","htmlFor","type","id","onChange","e","target","onBlur","disabled","preventDefault","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8236719.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3KDuX\"};","import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nconst initialCounterState = { counter: 0, show: true, show: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initialCounterState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggle(state) {\r\n      state.show = !state.show;\r\n    },\r\n    clear(state) {\r\n      state.counter = 0;\r\n    },\r\n  },\r\n});\r\n\r\nconst initialAuthState = { isAuthenticated: false };\r\n\r\nconst authenticationSlice = createSlice({\r\n  name: \"authentication\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state) {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    counter: counterSlice.reducer,\r\n    authentication: authenticationSlice.reducer,\r\n  },\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authenticationSlice.actions;\r\nexport default store;\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"INCREMENT\") {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       show: state.show,\r\n//     };\r\n//   }\r\n//   if (action.type === \"DECREMENT\") {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       show: state.show,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"INCREASE\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       show: state.show,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"TOGGLE\") {\r\n//     return {\r\n//       counter: state.counter,\r\n//       show: !state.show,\r\n//     };\r\n//   }\r\n\r\n//   return state;\r\n// };\r\n","import { useSelector, useDispatch } from \"react-redux\";\nimport classes from \"./Counter.module.css\";\nimport { counterActions } from \"../store/store\";\n\nconst Counter = () => {\n  const counter = useSelector((state) => state.counter.counter);\n  const showValue = useSelector((state) => state.counter.show);\n\n  const dispatch = useDispatch();\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggle());\n  };\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(5));\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {showValue && (\n        <div>\n          <p className={classes.value}>{counter}</p>\n          <div>\n            <button onClick={incrementHandler} className={classes.button}>\n              Increment\n            </button>\n            <button onClick={increaseHandler} className={classes.button}>\n              Increase by 5\n            </button>\n            <button onClick={decrementHandler} className={classes.button}>\n              Decrement\n            </button>\n          </div>\n        </div>\n      )}\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n","import classes from \"./Header.module.css\";\nimport { authActions, counterActions } from \"../store/store\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    dispatch(counterActions.clear());\n    dispatch(authActions.logout());\n  };\n  return (\n    <header className={classes.header}>\n      <h1>Redux Auth</h1>\n      <nav>\n        <ul>\n          <li>\n            <a href=\"/\">My Products</a>\n          </li>\n          <li>\n            <a href=\"/\">My Sales</a>\n          </li>\n          <li>\n            <button onClick={logoutHandler}>Logout</button>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import classes from \"./Auth.module.css\";\nimport { authActions } from \"../store/store\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\n\nconst Auth = () => {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailTouched, setEmailTouched] = useState(false);\n  const [passwordTouched, setPasswordTouched] = useState(false);\n\n  const emailIsValid = email !== \"\" && email.includes(\"@\") && emailTouched;\n  const passwordIsValid =\n    password !== \"\" && password.length > 7 && passwordTouched;\n\n  const emailChangeHandler = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const emailBlurHandler = (e) => {\n    setEmailTouched(true);\n  };\n\n  const passwordBlurHandler = (e) => {\n    setPasswordTouched(true);\n  };\n\n  const passwordChangeHandler = (e) => {\n    setPassword(e.target.value);\n  };\n\n  let formIsValid = false;\n\n  if (emailIsValid && passwordIsValid) formIsValid = true;\n\n  const loginHandler = (e) => {\n    e.preventDefault();\n    dispatch(authActions.login());\n  };\n\n  return (\n    <main className={classes.auth}>\n      <section>\n        <form>\n          <div className={classes.control}>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              onChange={emailChangeHandler}\n              value={email}\n              onBlur={emailBlurHandler}\n            />\n            {!emailIsValid && emailTouched && (\n              <p className={classes[\"error-text\"]}>\n                Please enter a valid email address\n              </p>\n            )}\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              onChange={passwordChangeHandler}\n              value={password}\n              onBlur={passwordBlurHandler}\n            />\n            {!passwordIsValid && passwordTouched && (\n              <p className={classes[\"error-text\"]}>\n                Your password should be at least 8 characters\n              </p>\n            )}\n          </div>\n          <button\n            className={!formIsValid ? classes.disabled : \"\"}\n            disabled={!formIsValid}\n            onClick={loginHandler}\n          >\n            Login\n          </button>\n        </form>\n      </section>\n    </main>\n  );\n};\n\nexport default Auth;\n","import Counter from \"./components/Counter\";\nimport { Fragment } from \"react\";\nimport Header from \"./components/Header\";\nimport Auth from \"./components/Auth\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const isAuthenticated = useSelector(\n    (state) => state.authentication.isAuthenticated\n  );\n  return (\n    <Fragment>\n      {isAuthenticated && <Header />}\n      {!isAuthenticated && <Auth />}\n      {isAuthenticated && <Counter />}\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__3sSBG\",\"control\":\"Auth_control__uTms7\",\"disabled\":\"Auth_disabled__3SSRF\",\"error-text\":\"Auth_error-text__1GWFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__1seVv\",\"value\":\"Counter_value__28UF9\"};"],"sourceRoot":""}